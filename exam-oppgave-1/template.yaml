Transform: AWS::Serverless-2016-10-31

Resources:
  GenerateImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: app.lambda_handler
      Runtime: python3.9
      MemorySize: 512
      Timeout: 30
      Role: !GetAtt GenerateImageRole.Arn
      Environment:
        Variables:
          S3_BUCKET: pgr301-couch-explorers  # Reference the existing bucket
          MODEL_ID: "amazon.titan-image-generator-v1"
      Events:
        GenerateImageAPI:
          Type: Api
          Properties:
            Path: /generate-image
            Method: post

  GenerateImageRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3WritePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                Resource: "arn:aws:s3:::pgr301-couch-explorers/*"
        - PolicyName: BedrockInvokePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "bedrock:InvokeModel"
                Resource: "*"
Outputs:
  ApiGatewayEndpoint:
    Description: "API Gateway endpoint URL for the GenerateImageFunction"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate-image/"
    Export:
        Name: "ApiGatewayEndpoint"