name: Deploy SAM Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-west-1

    steps:
      # Step 1: Checkout the repository
      - name: üõ†Ô∏è Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: üêç Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install AWS SAM CLI
      - name: üì¶ Install AWS SAM CLI
        run: |
          echo "Installing SAM CLI..."
          pip install aws-sam-cli
          sam --version

      # Step 4: Configure AWS credentials
      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 5: Build the SAM application
      - name: üèóÔ∏è Build SAM Application
        working-directory: exam-oppgave-1
        run: |
          echo "Building the SAM application..."
          sam build

      # Step 6: Deploy the SAM application to AWS
      - name: üöÄ Deploy SAM Application
        working-directory: exam-oppgave-1
        run: |
          echo "Deploying the SAM application..."
          sam deploy --no-confirm-changeset \
            --stack-name couch-explorers-lambda-rem-2024 \
            --capabilities CAPABILITY_IAM \
            --force-upload \
            --no-fail-on-empty-changeset || echo "No changes to deploy"

      # Step 7: Fetch API Gateway URL
      - name: üåê Fetch API Gateway URL
        id: fetch_api_url
        run: |
          echo "Fetching API Gateway URL from CloudFormation..."
          api_url=$(aws cloudformation describe-stacks \
            --stack-name couch-explorers-lambda-rem-2024 \
            --region ${{ env.AWS_REGION }} \
            --query "Stacks[0].Outputs[?OutputKey=='ImageGenerationApi'].OutputValue" \
            --output text)
          if [ -z "$api_url" ]; then
            echo "::error::Error: API Gateway URL not found in stack outputs!"
            exit 1
          fi
          echo "API Gateway URL: $api_url"
          echo "API_GATEWAY_URL=$api_url" >> $GITHUB_ENV

      # Step 8: Debug CloudFormation Outputs
      - name: üõ†Ô∏è Debug CloudFormation Outputs
        run: |
          echo "Fetching all CloudFormation stack outputs for debugging..."
          aws cloudformation describe-stacks \
            --stack-name couch-explorers-lambda-rem-2024 \
            --region ${{ env.AWS_REGION }} \
            --query "Stacks[0].Outputs" \
            --output table

      # Step 9: Display API Gateway URL
      - name: üì¢ Display Deployment Outputs
        run: |
          echo "======================================"
          echo "üöÄ Deployment Summary"
          echo "======================================"
          echo "AWS Region: ${{ env.AWS_REGION }}"
          echo "Stack Name: couch-explorers-lambda-rem-2024"
          echo "API Gateway URL: ${{ env.API_GATEWAY_URL }}"
          echo "======================================"
